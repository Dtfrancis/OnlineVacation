//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OnlineVacationReservation.OnlineVacay {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SearchvacationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCruiseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchFlightOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::OnlineVacationReservation.Properties.Settings.Default.OnlineVacationReservation_OnlineVacay_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SearchvacationCompletedEventHandler SearchvacationCompleted;
        
        /// <remarks/>
        public event SearchCruiseCompletedEventHandler SearchCruiseCompleted;
        
        /// <remarks/>
        public event SearchFlightCompletedEventHandler SearchFlightCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Searchvacation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Searchvacation(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return) {
            object[] results = this.Invoke("Searchvacation", new object[] {
                        Departing_Country,
                        Departing_City,
                        Destination_Country,
                        Destination_City,
                        Departure,
                        Return});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SearchvacationAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return) {
            this.SearchvacationAsync(Departing_Country, Departing_City, Destination_Country, Destination_City, Departure, Return, null);
        }
        
        /// <remarks/>
        public void SearchvacationAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return, object userState) {
            if ((this.SearchvacationOperationCompleted == null)) {
                this.SearchvacationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchvacationOperationCompleted);
            }
            this.InvokeAsync("Searchvacation", new object[] {
                        Departing_Country,
                        Departing_City,
                        Destination_Country,
                        Destination_City,
                        Departure,
                        Return}, this.SearchvacationOperationCompleted, userState);
        }
        
        private void OnSearchvacationOperationCompleted(object arg) {
            if ((this.SearchvacationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchvacationCompleted(this, new SearchvacationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCruise", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SearchCruise(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return) {
            object[] results = this.Invoke("SearchCruise", new object[] {
                        Departing_Country,
                        Departing_City,
                        Destination_Country,
                        Destination_City,
                        Departure,
                        Return});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SearchCruiseAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return) {
            this.SearchCruiseAsync(Departing_Country, Departing_City, Destination_Country, Destination_City, Departure, Return, null);
        }
        
        /// <remarks/>
        public void SearchCruiseAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return, object userState) {
            if ((this.SearchCruiseOperationCompleted == null)) {
                this.SearchCruiseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCruiseOperationCompleted);
            }
            this.InvokeAsync("SearchCruise", new object[] {
                        Departing_Country,
                        Departing_City,
                        Destination_Country,
                        Destination_City,
                        Departure,
                        Return}, this.SearchCruiseOperationCompleted, userState);
        }
        
        private void OnSearchCruiseOperationCompleted(object arg) {
            if ((this.SearchCruiseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCruiseCompleted(this, new SearchCruiseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchFlight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SearchFlight(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return) {
            object[] results = this.Invoke("SearchFlight", new object[] {
                        Departing_Country,
                        Departing_City,
                        Destination_Country,
                        Destination_City,
                        Departure,
                        Return});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SearchFlightAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return) {
            this.SearchFlightAsync(Departing_Country, Departing_City, Destination_Country, Destination_City, Departure, Return, null);
        }
        
        /// <remarks/>
        public void SearchFlightAsync(string Departing_Country, string Departing_City, string Destination_Country, string Destination_City, System.DateTime Departure, System.DateTime Return, object userState) {
            if ((this.SearchFlightOperationCompleted == null)) {
                this.SearchFlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFlightOperationCompleted);
            }
            this.InvokeAsync("SearchFlight", new object[] {
                        Departing_Country,
                        Departing_City,
                        Destination_Country,
                        Destination_City,
                        Departure,
                        Return}, this.SearchFlightOperationCompleted, userState);
        }
        
        private void OnSearchFlightOperationCompleted(object arg) {
            if ((this.SearchFlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFlightCompleted(this, new SearchFlightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SearchvacationCompletedEventHandler(object sender, SearchvacationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchvacationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchvacationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SearchCruiseCompletedEventHandler(object sender, SearchCruiseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCruiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCruiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SearchFlightCompletedEventHandler(object sender, SearchFlightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591